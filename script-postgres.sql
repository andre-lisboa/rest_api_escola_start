-- This script was generated by the ERD tool in pgAdmin 4.
-- Please log an issue at https://github.com/pgadmin-org/pgadmin4/issues/new/choose if you find any bugs, including reproduction steps.
BEGIN;


CREATE TABLE IF NOT EXISTS public.aluno
(
    id_aluno serial NOT NULL,
    tx_nome character varying(100) COLLATE pg_catalog."default" NOT NULL,
    tx_sexo character varying(1) COLLATE pg_catalog."default" NOT NULL,
    dt_nascimento date,
    CONSTRAINT aluno_pkey PRIMARY KEY (id_aluno)
);

CREATE TABLE IF NOT EXISTS public.cursa
(
    id_aluno integer NOT NULL,
    id_disciplina integer NOT NULL,
    in_ano integer NOT NULL,
    in_semestre integer NOT NULL,
    in_faltas integer DEFAULT 0,
    nm_nota1 numeric(4, 2) DEFAULT 0,
    nm_nota2 numeric(4, 2) DEFAULT 0,
    nm_nota3 numeric(4, 2) DEFAULT 0,
    bl_aprovado boolean DEFAULT false,
    CONSTRAINT cursa_pkey PRIMARY KEY (id_aluno, id_disciplina, in_ano, in_semestre)
);

CREATE TABLE IF NOT EXISTS public.curso
(
    id_curso serial NOT NULL,
    id_instituicao integer,
    id_tipo_curso integer,
    tx_descricao character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT curso_pkey PRIMARY KEY (id_curso),
    CONSTRAINT unique_instituicao_tipo UNIQUE (id_instituicao, id_tipo_curso, tx_descricao)
);

CREATE TABLE IF NOT EXISTS public.disciplina
(
    id_disciplina serial NOT NULL,
    id_curso integer,
    id_tipo_disciplina integer,
    tx_sigla character varying(10) COLLATE pg_catalog."default" NOT NULL,
    tx_descricao character varying(150) COLLATE pg_catalog."default" NOT NULL,
    in_periodo integer NOT NULL,
    in_carga_horaria integer NOT NULL,
    CONSTRAINT disciplina_pkey PRIMARY KEY (id_disciplina)
);

CREATE TABLE IF NOT EXISTS public.instituicao
(
    id_instituicao serial NOT NULL,
    tx_sigla character varying(15) COLLATE pg_catalog."default" NOT NULL,
    tx_descricao character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT instituicao_pkey PRIMARY KEY (id_instituicao)
);

CREATE TABLE IF NOT EXISTS public.leciona
(
    id_professor integer NOT NULL,
    id_disciplina integer NOT NULL,
    CONSTRAINT leciona_pkey PRIMARY KEY (id_professor, id_disciplina)
);

CREATE TABLE IF NOT EXISTS public.professor
(
    id_professor serial NOT NULL,
    id_titulo integer,
    tx_nome character varying(150) COLLATE pg_catalog."default" NOT NULL,
    tx_sexo character varying(10) COLLATE pg_catalog."default" NOT NULL,
    tx_estado_civil character varying(10) COLLATE pg_catalog."default" NOT NULL,
    dt_nascimento date,
    tx_telefone character varying(15) COLLATE pg_catalog."default",
    id_instituicao integer,
    CONSTRAINT professor_pkey PRIMARY KEY (id_professor)
);

CREATE TABLE IF NOT EXISTS public.tipo_curso
(
    id_tipo_curso serial NOT NULL,
    tx_descricao character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_curso_pkey PRIMARY KEY (id_tipo_curso)
);

CREATE TABLE IF NOT EXISTS public.tipo_disciplina
(
    id_tipo_disciplina serial NOT NULL,
    tx_descricao character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT tipo_disciplina_pkey PRIMARY KEY (id_tipo_disciplina)
);

CREATE TABLE IF NOT EXISTS public.titulo
(
    id_titulo serial NOT NULL,
    tx_descricao character varying(150) COLLATE pg_catalog."default" NOT NULL,
    CONSTRAINT titulo_pkey PRIMARY KEY (id_titulo)
);

ALTER TABLE IF EXISTS public.cursa
    ADD CONSTRAINT cursa_id_aluno_fkey FOREIGN KEY (id_aluno)
    REFERENCES public.aluno (id_aluno) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.cursa
    ADD CONSTRAINT cursa_id_disciplina_fkey FOREIGN KEY (id_disciplina)
    REFERENCES public.disciplina (id_disciplina) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.curso
    ADD CONSTRAINT curso_id_instituicao_fkey FOREIGN KEY (id_instituicao)
    REFERENCES public.instituicao (id_instituicao) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.curso
    ADD CONSTRAINT curso_id_tipo_curso_fkey FOREIGN KEY (id_tipo_curso)
    REFERENCES public.tipo_curso (id_tipo_curso) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.disciplina
    ADD CONSTRAINT disciplina_id_curso_fkey FOREIGN KEY (id_curso)
    REFERENCES public.curso (id_curso) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.disciplina
    ADD CONSTRAINT disciplina_id_tipo_disciplina_fkey FOREIGN KEY (id_tipo_disciplina)
    REFERENCES public.tipo_disciplina (id_tipo_disciplina) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.leciona
    ADD CONSTRAINT leciona_id_disciplina_fkey FOREIGN KEY (id_disciplina)
    REFERENCES public.disciplina (id_disciplina) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.leciona
    ADD CONSTRAINT leciona_id_professor_fkey FOREIGN KEY (id_professor)
    REFERENCES public.professor (id_professor) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE CASCADE;


ALTER TABLE IF EXISTS public.professor
    ADD CONSTRAINT professor_id_instituicao_fkey FOREIGN KEY (id_instituicao)
    REFERENCES public.instituicao (id_instituicao) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;


ALTER TABLE IF EXISTS public.professor
    ADD CONSTRAINT professor_id_titulo_fkey FOREIGN KEY (id_titulo)
    REFERENCES public.titulo (id_titulo) MATCH SIMPLE
    ON UPDATE CASCADE
    ON DELETE SET NULL;

END;